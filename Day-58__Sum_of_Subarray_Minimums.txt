class Solution {
public:
    int MOD = 1e9+7;
    int sumSubarrayMins(vector<int>& arr) {
        int n=arr.size();
        int minSum=0;
        vector<int> left(n,-1), right(n,n);
        stack<int> st;

        for(int i=0; i<n; i++) {
            while(st.size() && arr[i]<arr[st.top()]) st.pop();
            if(st.size()) left[i]=i-st.top();
            else left[i]=i+1;
            st.push(i);
        }

        while(st.size()) st.pop();

        for(int i=n-1; i>=0; i--) {
            while(st.size() && arr[i]<=arr[st.top()]) st.pop();
            if(st.size()) right[i]=st.top()-i;
            else right[i]=n-i;
            st.push(i);
        }

        long long prod;
        for(int i=0; i<n; i++) {
            prod=(left[i]*right[i])%MOD;
            prod=(prod*arr[i])%MOD;
            minSum=(minSum+prod)%MOD;
        }

        return minSum;
    }
};